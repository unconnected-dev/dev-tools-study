Commands



ls -a
Lists all contents of a directory, including hidden files and directories.


git status
Gives information on the current status of a Git repository and its contents.


git init
Initializes a Git repo. This is done once per project, at the top-level folder
containing your project.


git add
git add .
Stages changes for the next commit. It adds modified or new files to the
staging area, preparing them to be included in the next commit.

The . will add all changes at once.


git commit -m "commit message here"
Saves staged changes to the repository's history. Each commit has a unique
ID and a message describing the changes.


git commit --amend
Modifies the most recent commit. It allows you to change the commit message
or add new changes without creating a new commit.


code .
Opens the current directory in Visual Studio Code.


git log --oneline
Shows a compact version of the commit history, displaying each commit as a
single line with its short hash and message.


git branch
Lists all branches in the repository. 


git branch <branch-name>
Creates a new branch based on the current HEAD.


git branch -d <branch-name>
Deletes a local branch that has already been merged. It helps clean up old
branches after they've been integrated.


git branch -D feature-branch  
Forcefully deletes a local branch, even if it hasn't been merged. Use with
caution, as unmerged changes will be lost.


git branch -m <old-branch> <new-branch>  
Renames the branch to a new name.


git switch <branch-name>
Used to switch between branches or create a new branch. 


git switch -c <branch-name>  
To create and switch to a new branch.


git merge <branch-name>  
Combines changes from one branch into another. Typically used to merge a
feature branch into the main branch. This merges feature-branch into the
current branch.


git diff
git diff [filename]
Shows the differences between files or commits. It highlights what changes
have been made but not yet staged.


git dif HEAD
git dif HEAD [filename]
Lists all changes in the working tree since your last commit. Both staged
and unstaged.


git diff --staged
git diff --staged [filename]
git diff --cached
git diff --cached [filename]
Shows the difference between the staging area and the last commit. It
shows what changes you’ve staged (with git add) but haven’t committed yet.